# Ubuntu-based container with Gluetun VPN + Playwright
FROM qmcgaw/gluetun:latest

# Switch to root for installations
USER root

# Update and install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    wget \
    curl \
    git \
    ca-certificates \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libwayland-client0 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    lsb-release \
    xdg-utils \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment and install Python packages
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install \
    playwright==1.40.0 \
    firebase-admin==6.2.0 \
    redis==4.5.0 \
    requests==2.31.0 \
    python-dotenv==1.0.0 \
    pytz==2023.3 \
    aiofiles==23.0.0

# Install Playwright browsers
RUN playwright install chromium && \
    playwright install-deps chromium

# Create app directory and set permissions
RUN mkdir -p /app/logs && \
    chmod 755 /app && \
    chmod 755 /app/logs

# Create a startup script that combines Gluetun and our Python app
COPY <<EOF /usr/local/bin/youtube-scraper-entrypoint.sh
#!/bin/bash
set -e

# Start Gluetun VPN in background
echo "Starting Gluetun VPN..."
/gluetun-entrypoint &
GLUETUN_PID=\$!

# Wait for VPN to be ready
echo "Waiting for VPN connection..."
sleep 30

# Check VPN is working
echo "Testing VPN connection..."
curl -s ifconfig.me || echo "VPN connection test failed"

# Keep container running
echo "Container ready for YouTube scraping"
wait \$GLUETUN_PID
EOF

RUN chmod +x /usr/local/bin/youtube-scraper-entrypoint.sh

# Set working directory
WORKDIR /app

# Use our custom entrypoint
ENTRYPOINT ["/usr/local/bin/youtube-scraper-entrypoint.sh"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1